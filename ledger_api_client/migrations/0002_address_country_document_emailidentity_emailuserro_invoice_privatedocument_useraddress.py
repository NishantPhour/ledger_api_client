# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2021-05-14 08:46
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.utils.timezone
import django_countries.fields
import ledger_api_client.ledger_models
import ledger_api_client.oscar_fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    dependencies = [
        ('ledger_api_client', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailUserRO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=128, verbose_name='Given name(s)')),
                ('last_name', models.CharField(max_length=128)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into the admin site.')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.Unselect this instead of deleting ledger.accounts.')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('title', models.CharField(blank=True, choices=[('Mr', 'Mr'), ('Miss', 'Miss'), ('Mrs', 'Mrs'), ('Ms', 'Ms'), ('Dr', 'Dr')], max_length=100, null=True, verbose_name='title')),
                ('dob', models.DateField(null=True, verbose_name='date of birth')),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='phone number')),
                ('position_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='position title')),
                ('mobile_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='mobile number')),
                ('fax_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='fax number')),
                ('organisation', models.CharField(blank=True, help_text='organisation, institution or company', max_length=300, null=True, verbose_name='organisation')),
                ('postal_same_as_residential', models.NullBooleanField(default=False)),
                ('billing_same_as_residential', models.NullBooleanField(default=False)),
                ('character_flagged', models.BooleanField(default=False)),
                ('character_comments', models.TextField(blank=True)),
                ('extra_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
            ],
            options={
                'db_table': 'accounts_emailuser',
                'managed': False,
            },
            managers=[
                ('objects', ledger_api_client.ledger_models.EmailUserROManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line1', models.CharField(max_length=255, verbose_name='Line 1')),
                ('line2', models.CharField(blank=True, max_length=255, verbose_name='Line 2')),
                ('line3', models.CharField(blank=True, max_length=255, verbose_name='Line 3')),
                ('locality', models.CharField(max_length=255, verbose_name='Suburb / Town')),
                ('state', models.CharField(blank=True, default='WA', max_length=255)),
                ('country', django_countries.fields.CountryField(default='AU', max_length=2)),
                ('postcode', models.CharField(max_length=10)),
                ('search_text', models.TextField(editable=False)),
                ('hash', models.CharField(db_index=True, editable=False, max_length=255)),
            ],
            options={
                'verbose_name_plural': 'addresses',
                'db_table': 'accounts_address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('iso_3166_1_a2', models.CharField(max_length=2, primary_key=True, serialize=False, verbose_name='ISO 3166-1 alpha-2')),
                ('iso_3166_1_a3', models.CharField(blank=True, max_length=3, verbose_name='ISO 3166-1 alpha-3')),
                ('iso_3166_1_numeric', models.CharField(blank=True, max_length=3, verbose_name='ISO 3166-1 numeric')),
                ('printable_name', models.CharField(max_length=128, verbose_name='Country name')),
                ('name', models.CharField(max_length=128, verbose_name='Official name')),
                ('display_order', models.PositiveSmallIntegerField(db_index=True, default=0, help_text='Higher the number, higher the country in the list.', verbose_name='Display order')),
                ('is_shipping_country', models.BooleanField(db_index=True, default=False, verbose_name='Is shipping country')),
            ],
            options={
                'db_table': 'address_country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('file', models.FileField(upload_to='%Y/%m/%d')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'accounts_document',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailIdentity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
            options={
                'db_table': 'accounts_emailidentity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('order_number', models.CharField(max_length=50, unique=True)),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('system', models.CharField(blank=True, max_length=4, null=True)),
                ('token', models.CharField(blank=True, max_length=80, null=True)),
                ('voided', models.BooleanField(default=False)),
                ('settlement_date', models.DateField(blank=True, null=True)),
                ('payment_method', models.SmallIntegerField(choices=[(0, 'Credit Card'), (1, 'BPAY'), (2, 'Monthly Invoicing'), (3, 'Other')], default=0)),
            ],
            options={
                'db_table': 'payments_invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrivateDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('text_content', models.TextField(blank=True, editable=False, null=True)),
                ('file_group', models.IntegerField(blank=True, choices=[(1, 'Identification'), (2, 'Senior Card')], null=True)),
                ('file_group_ref_id', models.IntegerField(blank=True, null=True)),
                ('extension', models.CharField(blank=True, max_length=5, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'accounts_privatedocument',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, choices=[('Mr', 'Mr'), ('Miss', 'Miss'), ('Mrs', 'Mrs'), ('Ms', 'Ms'), ('Dr', 'Dr')], max_length=64, verbose_name='Title')),
                ('first_name', models.CharField(blank=True, max_length=255, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='Last name')),
                ('line1', models.CharField(max_length=255, verbose_name='First line of address')),
                ('line2', models.CharField(blank=True, max_length=255, verbose_name='Second line of address')),
                ('line3', models.CharField(blank=True, max_length=255, verbose_name='Third line of address')),
                ('line4', models.CharField(blank=True, max_length=255, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=255, verbose_name='State/County')),
                ('postcode', ledger_api_client.oscar_fields.UppercaseCharField(blank=True, max_length=64, verbose_name='Post/Zip-code')),
                ('search_text', models.TextField(editable=False, verbose_name='Search text - used only for searching addresses')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='In case we need to call you about your order', max_length=128, verbose_name='Phone number')),
                ('notes', models.TextField(blank=True, help_text='Tell us anything we should know when delivering your order.', verbose_name='Instructions')),
                ('is_default_for_shipping', models.BooleanField(default=False, verbose_name='Default shipping address?')),
                ('is_default_for_billing', models.BooleanField(default=False, verbose_name='Default billing address?')),
                ('num_orders_as_shipping_address', models.PositiveIntegerField(default=0, verbose_name='Number of Orders as Shipping Address')),
                ('num_orders_as_billing_address', models.PositiveIntegerField(default=0, verbose_name='Number of Orders as Billing Address')),
                ('hash', models.CharField(db_index=True, editable=False, max_length=255, verbose_name='Address Hash')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
            ],
            options={
                'db_table': 'address_useraddress',
                'managed': False,
            },
        ),
    ]
